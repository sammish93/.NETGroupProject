// <auto-generated />
using System;
using Hiof.DotNetCourse.V2023.Group14.CommentService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hiof.DotNetCourse.V2023.Group14.CommentService.Migrations
{
    [DbContext(typeof(CommentServiceContext))]
    [Migration("20230426172142_UpdateNullability")]
    partial class UpdateNullability
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hiof.DotNetCourse.V2023.Group14.ClassLibrary.Classes.V1.V1Comments", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("char(36)")
                        .HasColumnName("author_id");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("body");

                    b.Property<int>("CommentType")
                        .HasColumnType("int")
                        .HasColumnName("comment_type");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("ISBN10")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("isbn_10");

                    b.Property<string>("ISBN13")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("isbn_13");

                    b.Property<string>("ParentCommentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("parent_comment_id");

                    b.Property<int?>("Upvotes")
                        .HasColumnType("int")
                        .HasColumnName("upvotes");

                    b.Property<string>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ParentCommentId");

                    b.ToTable("user_comments", "dbo");

                    b.HasData(
                        new
                        {
                            Id = "4a14dc4d-aa39-4ee5-bc34-b46701c3ca09",
                            AuthorId = "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            Body = "This book was good. At times it was a bit boring and difficult to read.",
                            CommentType = 1,
                            CreatedAt = new DateTime(2023, 2, 24, 12, 55, 19, 113, DateTimeKind.Unspecified),
                            ISBN10 = "1440674132",
                            ISBN13 = "9781440674136",
                            Upvotes = 0
                        },
                        new
                        {
                            Id = "0e6145cc-4150-43a8-ae24-81e8a69fad7f",
                            AuthorId = "54af86bf-346a-4cba-b36f-527748e1cb93",
                            Body = "I agree with how difficult it was to read at times",
                            CommentType = 2,
                            CreatedAt = new DateTime(2023, 2, 25, 11, 55, 19, 113, DateTimeKind.Unspecified),
                            ParentCommentId = "4a14dc4d-aa39-4ee5-bc34-b46701c3ca09",
                            Upvotes = 0
                        },
                        new
                        {
                            Id = "8f899b47-6229-4795-8cba-ba644a479d55",
                            AuthorId = "e8cc12ba-4df6-4b06-b96e-9ad00a927a93",
                            Body = "It was an okay book",
                            CommentType = 1,
                            CreatedAt = new DateTime(2023, 2, 25, 11, 59, 19, 113, DateTimeKind.Unspecified),
                            ISBN10 = "1440674132",
                            ISBN13 = "9781440674136",
                            Upvotes = 0
                        },
                        new
                        {
                            Id = "48dca027-f9c8-4c92-bbf9-db1dfdcc0a00",
                            AuthorId = "54af86bf-346a-4cba-b36f-527748e1cb93",
                            Body = "Great collection of books!",
                            CommentType = 0,
                            CreatedAt = new DateTime(2023, 2, 27, 11, 55, 19, 113, DateTimeKind.Unspecified),
                            Upvotes = 0,
                            UserId = "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        });
                });

            modelBuilder.Entity("Hiof.DotNetCourse.V2023.Group14.ClassLibrary.Classes.V1.V1Comments", b =>
                {
                    b.HasOne("Hiof.DotNetCourse.V2023.Group14.ClassLibrary.Classes.V1.V1Comments", "ParentComment")
                        .WithMany("Replies")
                        .HasForeignKey("ParentCommentId");

                    b.Navigation("ParentComment");
                });

            modelBuilder.Entity("Hiof.DotNetCourse.V2023.Group14.ClassLibrary.Classes.V1.V1Comments", b =>
                {
                    b.Navigation("Replies");
                });
#pragma warning restore 612, 618
        }
    }
}
